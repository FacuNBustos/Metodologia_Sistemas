2022-09-14

Implementé la entidad 'Passenger'

Esto es lo que entendí en relación a las cuestiones planteadas en la issue:

P: ¿Por qué atributos privados?

R: Para protegerlos del entorno. Si fuesen públicos estos podrían alterarse de
forma inesperada y/o indeseada causando toda clase de bugs.

La modificación de atributos se haría a través de setters que idealmente
garantizan que el nuevo valor tomado por el atributo es considerado válido.

P: ¿Por qué un método create? ¿Cómo se relaciona con el principio Open-Closed?

Podrían haber varias formas distintas de crear un objeto 'Passenger'. Todas
esas formas tendrían una cosa en común: el constructor, el cual solo se limita
a generar una instancia con los datos que recibe como argumento. De este modo
puede ser reutilizado por otros métodos que extiendan su funcionalidad como:
    - 'create': genera un ID único para un nuevo pasajero y luego instancia la
    clase

    - 'fromPrimitives': recibe un objeto que agrupa los datos del pasajero
    (incluyendo el ID) y con esos datos instancia la clase

El constructor está cerrado a modificación porque queda bien definida su
responsabilidad, mientras que está abierto a la extensión ya que puede ser
reutilizado por otros métodos que agreguen algo más a la funciónalidad básica
de instanciar la clase como en los ejemplos mencionados.
